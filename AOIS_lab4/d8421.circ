<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="2.13.8" version="1.0">
This file is intended to be loaded by Logisim-evolution (https://github.com/reds-heig/logisim-evolution).
<lib desc="#Wiring" name="0"/>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2">
    <tool name="Multiplexer">
      <a name="enable" val="false"/>
    </tool>
    <tool name="Demultiplexer">
      <a name="enable" val="false"/>
    </tool>
  </lib>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4">
    <tool name="ROM">
      <a name="contents">addr/data: 8 8
0
</a>
    </tool>
  </lib>
  <lib desc="#I/O" name="5"/>
  <lib desc="#HDL-IP" name="6">
    <tool name="VHDL Entity">
      <a name="content">--------------------------------------------------------------------------------&#13;
-- HEIG-VD, institute REDS, 1400 Yverdon-les-Bains&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
library ieee;&#13;
  use ieee.std_logic_1164.all;&#13;
  --use ieee.numeric_std.all;&#13;
&#13;
entity VHDL_Component is&#13;
  port(&#13;
  ------------------------------------------------------------------------------&#13;
  --Insert input ports below&#13;
    horloge_i  : in  std_logic;                    -- input bit example&#13;
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example&#13;
  ------------------------------------------------------------------------------&#13;
  --Insert output ports below&#13;
    max_o      : out std_logic;                    -- output bit example&#13;
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example&#13;
    );&#13;
end VHDL_Component;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
architecture type_architecture of VHDL_Component is&#13;
&#13;
&#13;
begin&#13;
&#13;
&#13;
end type_architecture;&#13;
</a>
    </tool>
  </lib>
  <lib desc="#TCL" name="7">
    <tool name="TclGeneric">
      <a name="content">library ieee;&#13;
use ieee.std_logic_1164.all;&#13;
&#13;
entity TCL_Generic is&#13;
  port(&#13;
    --Insert input ports below&#13;
    horloge_i  : in  std_logic;                    -- input bit example&#13;
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example&#13;
&#13;
	  --Insert output ports below&#13;
    max_o      : out std_logic;                    -- output bit example&#13;
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example&#13;
  );&#13;
end TCL_Generic;&#13;
</a>
    </tool>
  </lib>
  <lib desc="#Base" name="8">
    <tool name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
  </lib>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
    <a name="tickmain" val="half_period"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Menu Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="labelloc" val="east"/>
    </tool>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
  </toolbar>
  <circuit name="main">
    <a name="circuit" val="main"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <a name="circuitvhdl" val="false"/>
    <a name="circuitvhdlpath" val=""/>
    <wire from="(290,230)" to="(290,620)"/>
    <wire from="(350,440)" to="(530,440)"/>
    <wire from="(750,230)" to="(940,230)"/>
    <wire from="(160,200)" to="(210,200)"/>
    <wire from="(430,250)" to="(430,400)"/>
    <wire from="(580,420)" to="(580,450)"/>
    <wire from="(670,870)" to="(670,890)"/>
    <wire from="(440,970)" to="(530,970)"/>
    <wire from="(720,700)" to="(750,700)"/>
    <wire from="(580,870)" to="(670,870)"/>
    <wire from="(730,220)" to="(730,470)"/>
    <wire from="(320,250)" to="(320,500)"/>
    <wire from="(260,220)" to="(320,220)"/>
    <wire from="(390,600)" to="(440,600)"/>
    <wire from="(400,210)" to="(450,210)"/>
    <wire from="(320,250)" to="(370,250)"/>
    <wire from="(960,200)" to="(1020,200)"/>
    <wire from="(450,210)" to="(450,540)"/>
    <wire from="(410,640)" to="(530,640)"/>
    <wire from="(290,620)" to="(530,620)"/>
    <wire from="(290,700)" to="(530,700)"/>
    <wire from="(290,980)" to="(530,980)"/>
    <wire from="(770,240)" to="(770,910)"/>
    <wire from="(430,400)" to="(530,400)"/>
    <wire from="(770,240)" to="(940,240)"/>
    <wire from="(210,200)" to="(240,200)"/>
    <wire from="(350,210)" to="(350,440)"/>
    <wire from="(710,470)" to="(730,470)"/>
    <wire from="(360,800)" to="(380,800)"/>
    <wire from="(410,250)" to="(430,250)"/>
    <wire from="(320,760)" to="(530,760)"/>
    <wire from="(350,780)" to="(350,950)"/>
    <wire from="(580,960)" to="(670,960)"/>
    <wire from="(400,250)" to="(410,250)"/>
    <wire from="(290,800)" to="(290,980)"/>
    <wire from="(440,600)" to="(440,970)"/>
    <wire from="(670,720)" to="(670,780)"/>
    <wire from="(260,850)" to="(530,850)"/>
    <wire from="(580,450)" to="(660,450)"/>
    <wire from="(580,490)" to="(660,490)"/>
    <wire from="(490,210)" to="(940,210)"/>
    <wire from="(260,600)" to="(260,850)"/>
    <wire from="(410,250)" to="(410,640)"/>
    <wire from="(320,500)" to="(320,760)"/>
    <wire from="(1020,200)" to="(1070,200)"/>
    <wire from="(470,600)" to="(530,600)"/>
    <wire from="(470,680)" to="(530,680)"/>
    <wire from="(350,780)" to="(530,780)"/>
    <wire from="(350,440)" to="(350,780)"/>
    <wire from="(290,620)" to="(290,700)"/>
    <wire from="(670,930)" to="(670,960)"/>
    <wire from="(470,600)" to="(470,680)"/>
    <wire from="(260,600)" to="(360,600)"/>
    <wire from="(320,220)" to="(320,250)"/>
    <wire from="(290,800)" to="(330,800)"/>
    <wire from="(490,720)" to="(530,720)"/>
    <wire from="(290,700)" to="(290,800)"/>
    <wire from="(260,210)" to="(350,210)"/>
    <wire from="(440,600)" to="(470,600)"/>
    <wire from="(730,220)" to="(940,220)"/>
    <wire from="(380,800)" to="(530,800)"/>
    <wire from="(320,760)" to="(320,940)"/>
    <wire from="(720,910)" to="(770,910)"/>
    <wire from="(350,950)" to="(530,950)"/>
    <wire from="(580,490)" to="(580,520)"/>
    <wire from="(210,110)" to="(210,200)"/>
    <wire from="(380,800)" to="(380,890)"/>
    <wire from="(750,230)" to="(750,700)"/>
    <wire from="(450,210)" to="(490,210)"/>
    <wire from="(1020,120)" to="(1020,200)"/>
    <wire from="(260,230)" to="(290,230)"/>
    <wire from="(350,210)" to="(370,210)"/>
    <wire from="(320,500)" to="(530,500)"/>
    <wire from="(320,940)" to="(530,940)"/>
    <wire from="(260,240)" to="(260,600)"/>
    <wire from="(380,890)" to="(530,890)"/>
    <wire from="(580,620)" to="(670,620)"/>
    <wire from="(580,700)" to="(670,700)"/>
    <wire from="(580,780)" to="(670,780)"/>
    <wire from="(670,620)" to="(670,680)"/>
    <wire from="(450,540)" to="(530,540)"/>
    <wire from="(490,210)" to="(490,720)"/>
    <comp lib="0" loc="(1020,120)" name="Pin">
      <a name="facing" val="south"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
      <a name="radix" val="10unsigned"/>
    </comp>
    <comp lib="1" loc="(580,960)" name="AND Gate">
      <a name="inputs" val="4"/>
    </comp>
    <comp lib="1" loc="(580,620)" name="AND Gate">
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="1" loc="(580,700)" name="AND Gate">
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="1" loc="(580,520)" name="AND Gate"/>
    <comp lib="1" loc="(400,210)" name="NOT Gate"/>
    <comp lib="0" loc="(210,110)" name="Pin">
      <a name="facing" val="south"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
      <a name="radix" val="10unsigned"/>
    </comp>
    <comp lib="1" loc="(580,420)" name="AND Gate"/>
    <comp lib="1" loc="(400,250)" name="NOT Gate"/>
    <comp lib="0" loc="(240,200)" name="Splitter">
      <a name="fanout" val="4"/>
      <a name="incoming" val="4"/>
      <a name="appear" val="right"/>
    </comp>
    <comp lib="1" loc="(580,780)" name="AND Gate">
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="0" loc="(160,200)" name="Pin">
      <a name="width" val="4"/>
    </comp>
    <comp lib="1" loc="(360,800)" name="NOT Gate"/>
    <comp lib="1" loc="(710,470)" name="OR Gate"/>
    <comp lib="1" loc="(720,700)" name="OR Gate">
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="1" loc="(720,910)" name="OR Gate"/>
    <comp lib="1" loc="(390,600)" name="NOT Gate"/>
    <comp lib="1" loc="(580,870)" name="AND Gate"/>
    <comp lib="0" loc="(960,200)" name="Splitter">
      <a name="facing" val="west"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="4"/>
    </comp>
    <comp lib="0" loc="(1070,200)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
    </comp>
  </circuit>
</project>
